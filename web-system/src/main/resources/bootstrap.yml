server:
  port: 8100

#Dastasource config
spring:
  datasource:
    # 数据库连接池
    druid:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://127.0.0.1:3306/webstudy_db?useUnicode=true&characterEncoding=utf8
      username: root
      password: root
      filters: stat,wall  #druid 监控面板显示监听sql。属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat，日志用的filter:log4j， 防御sql注入的filter:wall
      type: com.alibaba.druid.pool.DruidDataSource
      initialSize: 1 #初始化时建立物理连接的个数。
      minIdle: 1  #最小连接池数量
      maxActive: 20 #最大连接池数量
      maxWait: 2000 #获取连接时最大等待时间，单位毫秒。
      timeBetweenEvictionRunsMillis: 60000 #1) Destroy线程定时监测的间隔
      minEvictableIdleTimeMillis: 300000 #连接保持空闲而不被驱逐的最长时间。建议值：5* timeBetweenEvictionRunsMillis
      validationQuery: SELECT 1 #用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。
      testWhileIdle: true #建议配置为true，不影响性能，并且保证安全性。
      testOnBorrow: false  #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。建议值：false
      testOnReturn: false #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。建议值：false
      poolPreparedStatements: true  #是否缓存preparedStatement，也就是PSCache。
      maxPoolPreparedStatementPerConnectionSize: 20 #要启用PSCache，必须配置大于0，
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000 #建立新连接时将发送到JDBC驱动程序的连接属性。
      # 要打开Druid监控页面需要做以下配置
      stat-view-servlet:
        enabled: true # 这个一定要加，不然【http://localhost:8080/druid/index.html】页面打不开
        url-pattern: '/druid/*'
        allow: 127.0.0.1
        # deny: 192.168.1.73
        login-username: admin
        login-password: 123456
        reset-enable: false
      web-stat-filter:
        enabled: true # 这个一定要加，不然【http://localhost:8080/druid/index.html】页面打不开
        url-pattern: '/*'
        exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'
        session-stat-enable: true
  kafka_one:
    bootstrap-servers: 127.0.0.1:9092
    producer:
      # 重试次数
      retries: 0
      # 采取ack机制
      #acks: 1
      # 批量提交的数据大小 16kb
      batch-size: 16384
      # 生产者暂存数据的缓冲区大小
      buffer-memory: 33554432
      # 序列化方式
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      # 消费者组
      group-id: kafka_testA
      # 是否自动提交偏移量
      enable-auto-commit: true
      #消费消息后间隔多长时间提交偏移量
      auto-commit-interval: 100
      # earliest:当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，从头开始消费
      # latest:当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，消费新产生的该分区下的数据
      # none:topic各分区都存在已提交的offset时，从offset后开始消费；只要有一个分区不存在已提交的offset，则抛出异常
      auto-offset-reset: earliest
      # 序列化方式
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  kafka_two:
    bootstrap-servers: 127.0.0.1:9093
    producer:
      retries: 0
      #acks: 1
      batch-size: 16384
      buffer-memory: 33554432
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: kafka_testA
      enable-auto-commit: true
      auto-commit-interval: 100
      auto-offset-reset: earliest
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  # Redis 配置
  redis:
    # Redis 服务器地址
    host: 127.0.0.1
    # 连接端口号
    port: 6379
    # 连接密码
    password: root
    # 数据库索引（0 - 15）
    database: 0
    # 连接超时时间（毫秒）
    timeout: 10000
    # lettuce 参数
    lettuce:
      pool:
        # 最大连接数(使用负值表示没有限制) 默认为 8
        max-active: 10
        # 最大阻塞等待时间(使用负值表示没有限制) 默认为 -1 ms
        max-wait: -1
        # 最大空闲连接 默认为 8
        max-idle: 5
        # 最小空闲连接 默认为 0
        min-idle: 0
    # redisson配置文件路径
    redisson:
      file: classpath:redisson.yml


#配置mybatis扫描mapper文件路径---使用druid配置多数据源后该配置失效
mybatis-plus:
  config-locations: classpath:mybatis/mybatis-config.xml
  mapper-locations: classpath:mybatis/mapper/*.xml,classpath:mybatis/mapper/*/*.xml
  configuration:
    #开启自动驼峰命名规则,数据库字段对实体映射
    map-underscore-to-camel-case: true
    # 开发时打开，控制台显示sql
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

# mysql分页插件配置
pagehelper:
  helper-dialect: mysql
  #开启优化，如果开启优化，在分页页码结果没有数据的时候,会显示有数据的页码数据
  reasonable: true
  #是否支持接口参数来传递分页参数，默认false
  supportMethodsArguments: false
  #pageSize=0 返回所有
  page-size-zero: false
  params: count=countSql
# 是否开启swagger页面
Swagger-Enable: true

